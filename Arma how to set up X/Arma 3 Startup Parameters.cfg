/////////////////Arma 3 Startup Parameters//////////////

////////////////////////Display Options////////////////////////

-window      			// Displays Arma windowed instead of full screen. Screen resolution / window size are set in arma3.cfg.
-posX=<Integer>			// Sets the default X Position of the Window.
-posY=<Integer>			// Sets the default Y Position of the Window.
-adapter=<Integer>		// Sets the default Video Adapter.


/////////////////////Game Loading Speedup/////////////////////////////////////////////

-noSplash				//Disables splash screens.
-world=<string>	        //Select a world loaded by default. Example: -world=Utes.
For faster              //game loading (no default world loaded and world intro in the main menu, only at game start, disabled): -world=empty.
-worldCfg=<String>	    //Init Landscape by the given world config
-skipIntro				//Disables world intros in the main menu permanently.


/////////////////////////////Performance//////////////////////////////////////////


-maxMem=<number>		/*Overrides memory allocation limit to a certain amount (in megabytes).
						1024 MiB is a hard-coded minimum (anything lower falls back to 1024). The maximum is influenced by your operating system (any value over the maximum will be reverted to this value):
						32-bit Windows + 32-bit game: 2047
						64-bit Windows + 32-bit game: 3071
						64-bit Windows + 64-bit game: (physical memory*4)/5
						Without the -maxMem parameter the engine attempts to set this parameter internaly to a reasonable value often defaulting to max values as described above. 
						The file cache is always excluded from the virtual address limit, see our developers blog: https://www.bistudio.com/blog/breaking-the-32-bit-barrier.

						Note that setting maxMem to 2000 does not mean that the game will never allocate more then 2000 MiB. It says that the game will do everything in its power to not cross this limit. 
						In general, it makes sense not using this parameter at all and only resort to it in case you experience issues with memory.*/

-maxVRAM=<number>		/*Defines Video Memory allocation limit to number (in megabytes). Use to resolve e.g. Windows problem: http://support.microsoft.com/kb/2026022/en-us?p=1.
						Minimum value is 128 MiB (anything lower falls back to 128). The value is ignored (under DX11) if engine properly detected VRAM size, minus 20% reserve with ceiling limit 300MB max.*/
					
-noCB					//Turns off multicore use. It slows down rendering but may resolve visual glitches.
-cpuCount=<number>		//Change to a number less or equal than numbers of available cores. This will override auto detection (which equate to native cores). Details below.
-exThreads=<number>		//Change to a number 0,1,3,5,7. This will override auto detection (which use 3 for dualcore and 7 for quadcore). Details below.
-malloc=<string>		//Sets the particular memory allocator to be used. Significantly affects both performance and stability of the game. More details.

-noLogs					//Be aware this means none errors saved to RPT file (report log). Yet in case of crash the fault address block info is saved.


-enableHT				//Enables the use of all logical CPU cores for parallel tasks processing. If your CPU does not support Hyper-Threading or similar technology, this parameter is ignored. When disabled, only physical cores are used.
						//Note that enabling this parameter may slightly improve or harm the performance depending on a scenario. This parameter may be overriden by -cpuCount so if you want to use the maximum number of CPU cores use "-enableHT" without "-cpuCount".

-hugepages				//Enables hugepages with the default memory allocator (malloc) for both client/server (https://forums.bistudio.com/topic/160288-arma-3-stable-server-166-performance-binary-feedback/?page=74#comment-3130011)


///////////////////////////////////////////////////Profile Options///////////////////////////////////

-name=<string>			//Profile name.
-profiles=<path>		//Location of user-profile folder. Details: -profiles.

////////////////////////////////////////Modifications//////////////////////////////////////////

-mod=<string>			/*Loads the specified sub-folders for different mods. Separated by semi-colons. Absolute path and multiple stacked folders are possible.

																Complex example
										-mod=test;x\test;c:\arma3\test2
										"test" is located in the arma3 installation folder ("Arma 3\test") (relative path)
										"x\test" is in the installation folder ("ArmA 3\x\test") (relative path; subfolder)
										"c:\arma3\test2" is in "c:\arma3\test2" (absolute path)*/

//////////////////////////////////////////////////    Server Options      ///////////////////////////////////////////////////////////////////////////////////////////

-setupHost				//Start the game in the setup server display, works with the client exe.
-server					//Start a dedicated server. Not needed for the dedicated server exe.
-port=<number>			//Port to have dedicated server listen on.
-pid=<filename>			//File to write the server's PID (process ID) to. The file is removed automatically when the exe is stopped. Only works for dedicated servers.
-ranking=<filename>		//Generates a ranking file. See below for details.
-netlog					//Enables multiplayer network traffic logging. For more details see server configuration.
-cfg=<filename>			//Selects the Server Basic Config file. Config file for server specific settings like network performance tuning.
-config=<filename>		//Selects the Server Config File. Config file for server specific settings like admin password and mission selection.
-profiles=<path>		//Path to the folder containing server profile. By default, server logs are written to server profile folder. If folder doesn't exist, it will be automatically created.
						

-bepath=<path>			//By default BattlEye will create BattlEye folder inside server profile folder. With -bepath param it is possible to specify a custom folder. For example:
				//-bepath=C:\MyBattlEyeFolder, or if the path contains spaces, "-bepath=C:\Users\KK\Desktop\Some Folder With Spaces" (enclosed in quotes).
-ip=<nnn.nnn.nnn.nnn>		//Command to enable support for Multihome servers. Allows server process to use defined available IP address. (b1.57.76934)
-par=<filename>			//Command to read startup parameters from a file. For more details see Startup parameters config file
-client					//Launch as client (console). Useful for headless clients.
-loadMissionToMemory	//Server will load mission into memory on first client downloading it. Then it keeps it pre-processed pre-cached in memory for next clients, saving some server CPU cycles,
-autoInit				//Automatically initialize mission just like first client does.
						//Note: Server config file (server.cfg) must contain "Persistent=1;", if it's 0 autoInit skips. 
						//Warning: This will break the Arma_3_Mission_Parameters function, so do not use it when you work with mission parameters, only default values are returned!

-serverMod=<string>		//Loads the specified sub-folders for different server-side (not broadcasted to clients) mods. Separated by semi-colons. Absolute path and multiple stacked folders are possible.
						//In Linux multiple folders arguments need the following separation syntax: -mod=mod1\;mod2\;mod3.

-disableServerThread	//Option to disable the server send messaging thread in case of random crashing (may also decrease performance of server on multicore CPUs)
-bandwidthAlg=2			//Uses a new experimental networking algorithm that might be better than the default one.